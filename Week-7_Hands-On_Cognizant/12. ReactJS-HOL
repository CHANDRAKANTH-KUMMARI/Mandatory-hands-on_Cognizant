Objectives

•	Explain about conditional rendering in React
•	Define element variables
•	Explain how to prevent components from rendering

In this hands-on lab, you will learn how to:
•	Implement conditional rendering in React applications

Prerequisites

The following is required to complete this hands-on lab:
•	Node.js
•	NPM
•	Visual Studio Code

Notes

Estimated time to complete this lab: 60 minutes.
Create a React Application named “ticketbookingapp” where the guest user can browse the page where the flight details are displayed whereas the logged in user only can book tickets.

The Login and Logout buttons should accordingly display different pages. Once the user is logged in the User page should be displayed. When the user clicks on Logout, the Guest page should be displayed.


Answer:

1. Explain about conditional rendering in React
Conditional rendering is the ability to display different components or elements based on certain conditions (like user login state). It works just like conditions in JavaScript using if, ternary (? :), &&, or element variables.

2. Define element variables
Element variables are used to store JSX elements conditionally and render them later.

3. Explain how to prevent components from rendering
You can prevent components from rendering by returning null from a component or using a condition to not include them.

npx create-react-app ticketbookingapp
cd ticketbookingapp
npm start

import React, { Component } from 'react';

function GuestPage() {
  return (
    <div>
      <h2>Welcome Guest</h2>
      <p>You can browse available flights, but login to book tickets.</p>
    </div>
  );
}

function UserPage() {
  return (
    <div>
      <h2>Welcome User</h2>
      <p>You are now logged in. You can book your flight tickets.</p>
    </div>
  );
}

class App extends Component {
  constructor() {
    super();
    this.state = {
      isLoggedIn: false
    };
  }

  handleLogin = () => {
    this.setState({ isLoggedIn: true });
  }

  handleLogout = () => {
    this.setState({ isLoggedIn: false });
  }

  render() {
    let pageContent;

    if (this.state.isLoggedIn) {
      pageContent = <UserPage />;
    } else {
      pageContent = <GuestPage />;
    }

    return (
      <div style={{ padding: '20px' }}>
        <h1>✈️ Flight Ticket Booking App</h1>

        {this.state.isLoggedIn ? (
          <button onClick={this.handleLogout}>Logout</button>
        ) : (
          <button onClick={this.handleLogin}>Login</button>
        )}

        <hr />
        {pageContent}
      </div>
    );
  }
}

export default App;
 
 


 


