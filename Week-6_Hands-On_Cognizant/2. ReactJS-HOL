Objectives

•	Explain React components
•	Identify the differences between components and JavaScript functions
•	Identify the types of components
•	Explain class component
•	Explain function component
•	Define component constructor
•	Define render() function

In this hands-on lab, you will learn how to:
•	Create a class component
•	Create multiple components
•	Render a component
Prerequisites

The following is required to complete this hands-on lab:
•	Node.js
•	NPM
•	Visual Studio Code

Notes

Estimated time to complete this lab: 30 minutes.
Create a react app for Student Management Portal named StudentApp and create a component named Home which will display the Message “Welcome to the Home page of Student Management Portal”. Create another component named About and display the Message “Welcome to the About page of the Student Management Portal”. Create a third component named Contact and display the Message “Welcome to the Contact page of the Student Management Portal”. Call all the three components.
1.	Create a React project named “StudentApp” type the following command in terminal of Visual studio:
2.	Create a new folder under Src folder with the name “Components”. Add a new file named “Home.js”
3.	Type the following code in Home.js
4.	Under Src folder add another file named “About.js”
5.	Repeat the same steps for Creating “About” and  “Contact” component by adding a new file as ”About.js”, “Contact.js” under “Src” folder and edit the code as mentioned for “Home” Component.
6.	Edit the App.js to invoke the Home, About and Contact component as follows:
7.	In command Prompt, navigate into StudentApp and execute the code by typing the following command:


React Project: Student Management Portal

You will build a simple React app named StudentApp with three components: Home, About, and Contact.

Each component will display a welcome message. You will render all three components from App.js.

Step-by-step Instructions

Step 1: Create a new React project
Open Visual Studio Code terminal and run this command:



npx create-react-app StudentApp
This will create a new folder named StudentApp with the base React setup.

Step 2: Create a new folder for components
Inside the src folder, create a new folder named Components.

Step 3: Create Home.js component

Inside the Components folder, create a new file named Home.js and add the following code:


import React from 'react';

function Home() {
  return (
    <div>
      <h2>Welcome to the Home page of Student Management Portal</h2>
    </div>
  );
}

export default Home;
Step 4: Create About.js component

In the same Components folder, create a new file named About.js and add the following code:


import React from 'react';

function About() {
  return (
    <div>
      <h2>Welcome to the About page of the Student Management Portal</h2>
    </div>
  );
}

export default About;
Step 5: Create Contact.js component

Create one more file in the Components folder named Contact.js and add this code:

javascript
import React from 'react';

function Contact() {
  return (
    <div>
      <h2>Welcome to the Contact page of the Student Management Portal</h2>
    </div>
  );
}

export default Contact;
Step 6: Edit App.js to render the components

Now open the App.js file inside the src folder and replace the code with this:

javascript

import React from 'react';
import Home from './Components/Home';
import About from './Components/About';
import Contact from './Components/Contact';

function App() {
  return (
    <div>
      <Home />
      <About />
      <Contact />
    </div>
  );
}

export default App;
Step 7: Run the project

cd StudentApp
npm start
